const https = require('https');

// Test 1: Check if the endpoint accepts our request format
console.log('üîç Debug Test 1: Basic request validation');

const testData = JSON.stringify({
  username: 'uday_mehlawat',
  message: 'Test message'
});

console.log('üìù Request body:', testData);
console.log('üìè Content length:', testData.length);

const options = {
  hostname: 'ig-dm-bot-0xvq.onrender.com',
  port: 443,
  path: '/send-instagram-dm',
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'Content-Length': testData.length,
    'User-Agent': 'Node.js Test Client'
  },
  timeout: 10000
};

const req = https.request(options, (res) => {
  console.log(`üìä Status: ${res.statusCode}`);
  console.log(`üìã Headers:`, res.headers);
  
  let data = '';
  res.on('data', chunk => data += chunk);
  res.on('end', () => {
    console.log('üìù Response:');
    console.log(data);
    
    // Check if it's the validation error
    if (data.includes('Missing required fields')) {
      console.log('‚ùå Validation error - request format issue');
    } else if (data.includes('Bad Request')) {
      console.log('‚ùå Bad Request - possible middleware issue');
    } else {
      console.log('‚úÖ Request accepted, processing started');
    }
  });
});

req.on('error', err => {
  console.log('‚ùå Request error:', err.message);
});

req.on('timeout', () => {
  console.log('‚è∞ Request timeout');
  req.destroy();
});

req.write(testData);
req.end();
